<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Listen</title>
  
  <subtitle>Everying</subtitle>
  <link href="/zzsv.github.io/atom.xml" rel="self"/>
  
  <link href="https://zzsv.github.io/"/>
  <updated>2020-08-28T03:04:53.402Z</updated>
  <id>https://zzsv.github.io/</id>
  
  <author>
    <name>Breek</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用端口介绍</title>
    <link href="https://zzsv.github.io/2020/08/28/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E4%BB%8B%E7%BB%8D/"/>
    <id>https://zzsv.github.io/2020/08/28/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-08-28T01:42:34.000Z</published>
    <updated>2020-08-28T03:04:53.402Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zzsv.github.io\assets\css\APlayer.min.css"><script src="\zzsv.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/zzsv.github.io/2020/08/28/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E4%BB%8B%E7%BB%8D/dk.jpg" alt="分享美图"></p><h1 id="常用端口号与对应的服务"><a href="#常用端口号与对应的服务" class="headerlink" title="常用端口号与对应的服务"></a>常用端口号与对应的服务</h1><blockquote><p>21端口：21端口主要用于FTP（FileTransferProtocol，文件传输协议）服务。<br>23端口：23端口主要用于Telnet（远程登录）服务，是Internet上普遍采用的登录和仿真程序。<br>25端口：25端口为SMTP（SimpleMailTransferProtocol，简单邮件传输协议）服务器所开放，主要用于发送邮件，如今绝大多数邮件服务器都使用该协议。<br>53端口：53端口为DNS（DomainNameServer，域名服务器）服务器所开放，主要用于域名解析，DNS服务在NT系统中使用的最为广泛。<br>67、68端口：67、68端口分别是为Bootp服务的BootstrapProtocolServer（引导程序协议服务端）和BootstrapProtocolClient（引导程序协议客户端）开放的端口。<br>69端口：TFTP是Cisco公司开发的一个简单文件传输协议，类似于FTP。<br>79端口：79端口是为Finger服务开放的，主要用于查询远程主机在线用户、操作系统类型以及是否缓冲区溢出等用户的详细信息。<br>80端口：80端口是为HTTP（HyperTextTransportProtocol，超文本传输协议）开放的，这是上网冲浪使用最多的协议，主要用于在WWW（WorldWideWeb，万维网）服务上传输信息的协议。<br>99端口：99端口是用于一个名为“MetagramRelay”（亚对策延时）的服务，该服务比较少见，一般是用不到的。<br>109、110端口：109端口是为POP2（PostOfficeProtocolVersion2，邮局协议2）服务开放的，110端口是为POP3（邮件协议3）服务开放的，POP2、POP3都是主要用于接收邮件的。<br>111端口：111端口是SUN公司的RPC（RemoteProcedureCall，远程过程调用）服务所开放的端口，主要用于分布式系统中不同计算机的内部进程通信，RPC在多种网络服务中都是很重要的组件。<br>113端口：113端口主要用于Windows的“AuthenticationService”（验证服务）。<br>119端口：119端口是为“NetworkNewsTransferProtocol”（网络新闻组传输协议，简称NNTP）开放的。<br>135端口：135端口主要用于使用RPC（RemoteProcedureCall，远程过程调用）协议并提供DCOM（分布式组件对象模型）服务。<br>137端口：137端口主要用于“NetBIOSNameService”（NetBIOS名称服务）。<br>139端口：139端口是为“NetBIOSSessionService”提供的，主要用于提供Windows文件和打印机共享以及Unix中的Samba服务。<br>143端口：143端口主要是用于“InternetMessageAccessProtocol”v2（Internet消息访问协议，简称IMAP）。<br>161端口：161端口是用于“SimpleNetworkManagementProtocol”（简单网络管理协议，简称SNMP）。<br>443端口：43端口即网页浏览端口，主要是用于HTTPS服务，是提供加密和通过安全端口传输的另一种HTTP。<br>445端口：445端口和139端口常被用于SMB协议。<br>554端口：554端口默认情况下用于“RealTimeStreamingProtocol”（实时流协议，简称RTSP）。<br>1024端口：1024端口一般不固定分配给某个服务，在英文中的解释是“Reserved”（保留）。<br>1080端口：1080端口是Socks代理服务使用的端口，大家平时上网使用的WWW服务使用的是HTTP协议的代理服务。<br>1755端口：1755端口默认情况下用于“MicrosoftMediaServer”（微软媒体服务器，简称MMS）。<br>2601,2604：zebra路由，默认密码zebra<br>4000端口：4000端口是用于大家经常使用的QQ聊天工具的，再细说就是为QQ客户端开放的端口，QQ服务端使用的端口是8000。<br>5554端口：在今年4月30日就报道出现了一种针对微软lsass服务的新蠕虫病毒——震荡波（Worm.Sasser），该病毒可以利用TCP5554端口开启一个FTP服务，主要被用于病毒的传播。<br>5632端口：5632端口是被大家所熟悉的远程控制软件pcAnywhere所开启的端口。<br>5900：vnc服务。<br>8080端口：8080端口同80端口，是被用于WWW代理服务的，可以实现网页 端口概念 </p></blockquote><h1 id="数据库类"><a href="#数据库类" class="headerlink" title="数据库类"></a>数据库类</h1><blockquote><p>3306：mysql<br>1433：sqlserver server<br>1434：sqlserver monitor<br>1521：oracle<br>5432：PostgreSQL<br>1158：ORACLE EMCTL<br>8080：Oracle XDB<br>2100：Oracle XDB FTP</p></blockquote><h1 id="中间件类"><a href="#中间件类" class="headerlink" title="中间件类"></a>中间件类</h1><blockquote><p>7001,7002：weblogic<br>9080：webshpere应用程序<br>9090：webshpere管理工具<br>8080：tomcat默认端口<br>Jboss通常占用的端口是1098，1099，4444，4445，8080，8009，8083，8093，默认为8080</p></blockquote><h1 id="特殊服务（漏洞）"><a href="#特殊服务（漏洞）" class="headerlink" title="特殊服务（漏洞）"></a>特殊服务（漏洞）</h1><blockquote><p>443：SSL心脏滴血<br>512,513,514：Rsync未授权访问<br>873：Rsync未授权访问<br>2375：docker remote api漏洞<br>5984：CouchDB<br>6379：redis未授权<br>7001,7002：WebLogic 默认弱口令，反序列化<br>9200,9300：elasticsearch未授权访问<br>11211：memcache未授权访问<br>27017,27018：Mongodb 未授权访问<br>28017：mongodb统计页面<br>50000：SAP命令执行<br>50070,50030：hadoop默认端口未授权访问 </p></blockquote><h2 id="知名端口（Well-KnownPorts）"><a href="#知名端口（Well-KnownPorts）" class="headerlink" title="知名端口（Well-KnownPorts）"></a>知名端口（Well-KnownPorts）</h2><p>知名端口即众所周知的端口号，范围从0到1023，这些端口号一般固定分配给一些服务。比如21端口分配给FTP服务，25端口分配给SMTP（简单邮件传输协议）服务，80端口分配给HTTP服务，135端口分配给RPC（远程过程调用）服务等等。   </p><h2 id="动态端口（DynamicPorts）"><a href="#动态端口（DynamicPorts）" class="headerlink" title="动态端口（DynamicPorts）"></a>动态端口（DynamicPorts）</h2><p>动态端口的范围从1024到65535，这些端口号一般不固定分配给某个服务，也就是说许多服务都可以使用这些端口。只要运行的程序向系统提出访问网络的申请，那么系统就可以从这些端口号中分配一个供该程序使用。比如1024端口就是分配给第一个向系统发出申请的程序。在关闭程序进程后，就会释放所占用的端口号。   不过，动态端口也常常被病毒木马程序所利用，如冰河默认连接端口是7626、WAY2.4是8011、Netspy3.0是7306、YAI病毒是1024等等。<br>查看端口，可以使用Netstat命令<br>小知识：Netstat命令用法<br>命令格式：Netstat－a－e－n－o－s<br>－a表示显示所有活动的TCP连接以及计算机监听的TCP和UDP端口。<br>－e表示显示以太网发送和接收的字节数、数据包数等。<br>－n表示只以数字形式显示所有活动的TCP连接的地址和端口号。<br>－o表示显示活动的TCP连接并包括每个连接的进程ID（PID）。<br>－s表示按协议显示各种连接的统计信息，包括端口号。 关闭/开启端口。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=375020&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\zzsv.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\zzsv.github.io
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo报Spawn failed解决</title>
    <link href="https://zzsv.github.io/2020/08/20/hexo%E6%8A%A5Spawn-failed%E8%A7%A3%E5%86%B3/"/>
    <id>https://zzsv.github.io/2020/08/20/hexo%E6%8A%A5Spawn-failed%E8%A7%A3%E5%86%B3/</id>
    <published>2020-08-20T03:46:43.000Z</published>
    <updated>2020-09-04T06:22:01.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zzsv.github.io\assets\css\APlayer.min.css"><script src="\zzsv.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/zzsv.github.io/2020/08/20/hexo%E6%8A%A5Spawn-failed%E8%A7%A3%E5%86%B3/20200820.jpg" alt="分享美图"><br>今天上传博客内容时发现报Spawn failed的错误。如下图：<br><img src="/zzsv.github.io/2020/08/20/hexo%E6%8A%A5Spawn-failed%E8%A7%A3%E5%86%B3/sf.png" alt="报错截图"></p><h1 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h1><ul><li>使用 ssh -T <a href="mailto:git@github.com">git@github.com</a>命令测试能否连接github，如果提示连接失败，请在你的C:\Users\Admin.ssh文件夹中创建名为<strong>config</strong>的文件，注意不要后缀名</li></ul><p><img src="/zzsv.github.io/2020/08/20/hexo%E6%8A%A5Spawn-failed%E8%A7%A3%E5%86%B3/config.jpg" alt="文件夹截图"></p><p>在配置文件中写入：</p><blockquote><p>Host         github.com<br>User          你GitHub的邮箱             <strong>这个改成你的邮箱</strong><br>Hostname     ssh.github.com<br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/id_rsa<br>Port 443</p></blockquote><ul><li><p>再使用 ssh -T <a href="mailto:git@github.com">git@github.com</a>命令测试能否连接github，输入yes，就可以重新连到github</p></li><li><p><del>不知道这个是否影响上传，可以直接使用下面的方法</del></p></li></ul><h1 id="终极方法，亲测好使！"><a href="#终极方法，亲测好使！" class="headerlink" title="终极方法，亲测好使！"></a>终极方法，亲测好使！</h1><p>打开config.yml配置文件,修改以下内容:</p><blockquote><p>repo: <a href="https://github.com/yourname/yourname.github.io.git" target="_blank" rel="noopener">https://github.com/yourname/yourname.github.io.git</a></p></blockquote><blockquote><p>repo修改为</p></blockquote><blockquote><p><a href="mailto:git@github.com">git@github.com</a>:yourname/yourname.github.io.git</p></blockquote><blockquote><p>将<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 替换成<a href="mailto:git@github.com">git@github.com</a>: 注意冒号</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1465313631&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\zzsv.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\zzsv.github.io
      
    
    </summary>
    
    
    
      <category term="Problem solving" scheme="https://zzsv.github.io/tags/Problem-solving/"/>
    
  </entry>
  
  <entry>
    <title>获取电信光猫的超管</title>
    <link href="https://zzsv.github.io/2020/08/20/%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E7%9A%84%E8%B6%85%E7%AE%A1/"/>
    <id>https://zzsv.github.io/2020/08/20/%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E7%9A%84%E8%B6%85%E7%AE%A1/</id>
    <published>2020-08-20T01:59:18.000Z</published>
    <updated>2020-08-20T03:36:23.592Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zzsv.github.io\assets\css\APlayer.min.css"><script src="\zzsv.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/zzsv.github.io/2020/08/20/%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E7%9A%84%E8%B6%85%E7%AE%A1/dx.jpg" alt="分享美图"></p><h1 id="注：本方法仅测试了电信，且开放了telnet端口的光猫。"><a href="#注：本方法仅测试了电信，且开放了telnet端口的光猫。" class="headerlink" title="注：本方法仅测试了电信，且开放了telnet端口的光猫。"></a>注：本方法仅测试了电信，且开放了telnet端口的光猫。</h1><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li><p>一台接入内网的电脑</p></li><li><p>为自己的电脑安装telent客户端，<a href="https://jingyan.baidu.com/article/48206aea9e0d8d216bd6b358.html" target="_blank" rel="noopener">参考链接</a>;win10同理</p></li><li><p>ctrl c and ctrl v和那么一丢丢电脑基础知识</p><h1 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a>获取密码</h1></li><li><p>打开dos命令行输入<code>telnet 192.168.1.1</code>，ip为你的光猫的地址</p></li><li><p>输入账户：root，密码：admin 页面显示<WAP></WAP></p></li><li><p>输入命令<code>shell</code>进入linux操作界面 会出现#号，说明成功进入</p></li><li><p>输入命令<code>cd/mnt/jffs2</code>进入到此文件夹，可以使用<code>pwd</code>命令查看是否在当前路径</p></li><li><p>输入命令<code>cp hw_ctree.xml myconf.xml.gz</code>  将hw_ctree.xml复制且重命名未myconf.xml.gz</p></li><li><p>输入命令<code>aescrypt2 1 myconf.xml.gz tmp</code>  将myconf文件进行解密</p></li><li><p>输入命令<code>gzip -d myconf.xml.gz</code> 将该文件解压</p></li><li><p>输入命令<code>grep &quot;password&quot; myconf.xml</code>  查看密码用户名一般为telecomadmin，密码为telecomadmin后面加8位数字</p></li><li><p>以上命令 从第五条开始都不会有提示，若提示错误，请自行解决。</p></li></ol><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>获取超管后可以进行web登录，使用查看源代码的方法找到宽带账户密码。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>网上的教程也有类似的，刚开始弄得时候，没注意文件名，无脑复制。还是要<strong>细心</strong>才行。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1423241987&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\zzsv.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\zzsv.github.io
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>博客搭建成功纪念一下！</title>
    <link href="https://zzsv.github.io/2020/07/17/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/"/>
    <id>https://zzsv.github.io/2020/07/17/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/</id>
    <published>2020-07-17T01:16:41.000Z</published>
    <updated>2020-08-20T03:36:43.036Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zzsv.github.io\assets\css\APlayer.min.css"><script src="\zzsv.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/zzsv.github.io/2020/07/17/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F/whzyn.jpg" alt="我好钟意你"></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>  去年的匆匆毕业，7月份入职杭州，如今也已经一年了，也不知道怎么就来了杭州，也许是对南方的憧憬，也许是随波大流。慢慢发现个问题，也是岁数大了，学了什么东西，一旦不经常用，都会慢慢忘记，所以总想着找个方法去解决这个问题，看到同事搭建了博客，觉得不错，于是心中也萌生了搭建博客的想法，但是一直也未付诸行动；这次决定搞一下。</p><h1 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h1><p>  有实力才会自信，我反正是这么感觉的，喜欢那些大佬对待问题侃侃而谈。也深知他们在背后下的努力。要学的太多，性子又比较急；所以要每天告诉自己：<br>  <strong>不要急，慢慢来！</strong>  <strong>不要急，慢慢来！</strong>  <strong>不要急，慢慢来！</strong></p><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><p>  暂时还不会在段落前进行缩进。。。<del>哈哈哈</del>    </p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=436668683&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\zzsv.github.io\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\zzsv.github.io
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
